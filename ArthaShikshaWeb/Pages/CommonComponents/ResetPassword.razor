@page "/reset-password"
@using System.ComponentModel.DataAnnotations
@using ArthaShikshaClient.Pages.Shared
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@layout BlankComponent

<PageTitle>Reset Password - Artha Shiksha</PageTitle>

<div class="reset-container">
    <!-- 70% width for background image with books on stool -->
    <div class="reset-left-section">
        <!-- Background image covers the entire left section -->
    </div>

    <!-- 30% width for reset password form -->
    <div class="reset-right-section">
        <div class="reset-form-wrapper">
            <!-- Logo Section -->
            <div class="logo-section">
                <span class="logo-text">Artha Shiksha</span>
            </div>

            <!-- Reset Password Icon and Title -->
            <div class="reset-icon-section">
                <div class="reset-icon">🔐</div>
            </div>

            <!-- Reset Password Form -->
            <RadzenTemplateForm TItem="ResetPasswordModel" Data="@resetModel" Submit="@OnSubmit" class="reset-form">
                <RadzenStack Gap="1.2rem">
                    <!-- Title -->
                    <div class="reset-title-section">
                        <RadzenText TextStyle="TextStyle.H5" class="reset-title">Reset Password</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2" class="reset-subtitle">
                            Enter your email to receive a 6-digit verification code and reset your password.
                        </RadzenText>
                    </div>

                    <!-- Email Field -->
                    <div class="form-field">
                        <RadzenLabel Text="Email Address" class="field-label" />
                        <RadzenTextBox @bind-Value="@resetModel.Email"
                                       Placeholder="Enter your email address"
                                       class="reset-input" />
                    </div>

                    <!-- Send Verification Code Button -->
                    <RadzenButton ButtonType="ButtonType.Submit"
                                  ButtonStyle="ButtonStyle.Primary"
                                  Text="Send Verification Code"
                                  class="reset-button" />

                    <!-- Remember Password Link -->
                    <div class="remember-section">
                        <RadzenText TextStyle="TextStyle.Body2" class="remember-text">
                            Remember your password?
                            <RadzenLink Text="Go Back" Path="/login" class="go-back-link" />
                        </RadzenText>
                    </div>
                </RadzenStack>
            </RadzenTemplateForm>

            <!-- Footer -->
            <div class="footer-section">
                <RadzenText TextStyle="TextStyle.Caption" class="footer-links">
                    <RadzenLink Text="Privacy Policy" Path="/privacy" class="footer-link" />
                    <span class="footer-separator"> | </span>
                    <span class="powered-text">Powered by </span>
                    <RadzenLink Text="ARTHA CHANAKYA" Path="#" class="company-link" />
                </RadzenText>
            </div>
        </div>
    </div>
</div>

@code {
    private ResetPasswordModel resetModel = new ResetPasswordModel();

    private async Task OnSubmit(ResetPasswordModel model)
    {
        try
        {
            Console.WriteLine($"Reset password request for: {model.Email}");

            // Validate email before proceeding
            if (string.IsNullOrEmpty(model.Email) || !IsValidEmail(model.Email))
            {
                await JSRuntime.InvokeVoidAsync("alert", "Please enter a valid email address.");
                return;
            }

            // Your password reset logic here
            // Example:
            // var result = await AuthService.SendResetCodeAsync(model.Email);

            // if (result.IsSuccess)
            // {
            //     Navigation.NavigateTo("/verify-code");
            // }
            // else
            // {
            //     await JSRuntime.InvokeVoidAsync("alert", "Failed to send verification code");
            // }

            // For demo purposes
            await JSRuntime.InvokeVoidAsync("alert", "Verification code sent to your email!");
            Navigation.NavigateTo("/verify-code");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Reset password error: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("alert", "Failed to send verification code. Please try again.");
        }
    }

    private bool IsValidEmail(string email)
    {
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }

    public class ResetPasswordModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Please enter a valid email address")]
        public string Email { get; set; } = string.Empty;
    }
}

<style>
    /* Reset margins and ensure full viewport */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    html, body {
        height: 100%;
        overflow: hidden;
    }

    /* Main Container - Full Screen */
    .reset-container {
        display: flex;
        height: 100vh;
        width: 100vw;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Left Section - 70% width with background image */
    .reset-left-section {
        flex: 0 0 70%;
        background-image: url('/images/Forget Password.svg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        position: relative;
    }

    /* Right Section - 30% width for reset form */
    .reset-right-section {
        flex: 0 0 30%;
        background-color: #ffffff;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem 1rem;
        box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
        overflow-y: auto;
    }

    /* Reset Form Wrapper */
    .reset-form-wrapper {
        width: 100%;
        max-width: 350px;
        min-width: 250px;
        text-align: center;
        display: flex;
        flex-direction: column;
    }

    /* Logo Section */
    .logo-section {
        text-align: center;
        margin-bottom: 2rem;
    }

    .logo-text {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2196F3;
        letter-spacing: -0.5px;
    }

    /* Reset Icon Section */
    .reset-icon-section {
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .reset-icon {
        font-size: 2.5rem;
        color: #4A90E2;
        background-color: #E8F4FD;
        padding: 1rem;
        border-radius: 50%;
        width: 80px;
        height: 80px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
    }

    /* Title Section */
    .reset-title-section {
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .reset-title {
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
        font-size: 1.4rem;
    }

    .reset-subtitle {
        color: #666;
        line-height: 1.4;
        font-size: 0.9rem;
        margin-bottom: 0;
    }

    /* Form Styling */
    .reset-form {
        width: 100%;
        margin-bottom: 2rem;
    }

    .form-field {
        margin-bottom: 1rem;
        text-align: left;
    }

    .field-label {
        display: block;
        font-size: 0.9rem;
        color: #333;
        margin-bottom: 0.5rem;
        font-weight: 500;
    }

    .reset-input {
        width: 100%;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 0.75rem 1rem;
        font-size: 0.95rem;
        transition: border-color 0.3s ease;
    }

        .reset-input:focus {
            border-color: #4A90E2;
            outline: none;
            box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.1);
        }

    /* Reset Button */
    .reset-button {
        width: 100%;
        background: linear-gradient(135deg, #4A90E2 0%, #357ABD 100%);
        border: none;
        border-radius: 8px;
        padding: 0.875rem 1rem;
        font-size: 1rem;
        font-weight: 600;
        color: white;
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .reset-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.4);
        }

        .reset-button:active {
            transform: translateY(0);
        }

    /* Remember Section */
    .remember-section {
        text-align: center;
        margin-top: 1rem;
    }

    .remember-text {
        font-size: 0.85rem;
        color: #666;
    }

    .go-back-link {
        color: #4A90E2;
        text-decoration: none;
        font-weight: 500;
        margin-left: 0.3rem;
    }

        .go-back-link:hover {
            text-decoration: underline;
        }

    /* Footer Section - Changed from absolute to relative positioning */
    .footer-section {
        text-align: center;
        width: 100%;
        margin-top: 1.5rem;
        padding: 0 1rem;
    }

    .footer-links {
        font-size: 0.75rem;
        color: #999;
        line-height: 1.2;
    }

    .footer-link {
        color: #999;
        text-decoration: none;
        margin: 0 0.3rem;
    }

        .footer-link:hover {
            text-decoration: underline;
        }

    .footer-separator {
        margin: 0 0.3rem;
        color: #ccc;
    }

    .powered-text {
        color: #999;
        margin: 0 0.3rem;
    }

    .company-link {
        color: #4A90E2;
        text-decoration: none;
        font-weight: 500;
        margin-left: 0.3rem;
    }

        .company-link:hover {
            text-decoration: underline;
        }

    /* Remove px-4 padding */
    .px-4 {
        padding-right: 0 !important;
        padding-left: 0 !important;
    }

    /* Remove content padding */
    .content {
        padding-top: 0 !important;
        padding: 0 !important;
    }

    /* Or target the specific article element */
    article.content.px-4 {
        padding: 0 !important;
    }

  
</style>
